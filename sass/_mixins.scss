@mixin displayGrid($numOfRows, $numOfColumns, $area) {
  display: grid;
  grid-template-rows: repeat($numOfRows, auto);
  grid-template-columns: $numOfColumns;
  grid-area: $area;
}

@mixin displayFlex($flex-direc, $wrap, $justify, $align) {
  display: flex;
  flex-flow: $flex-direc $wrap;
  justify-content: $justify;
  align-items: $align;
}

@mixin inputArea($padding, $border-radius, $border-type) {
  padding: $padding;
  border-radius: $border-radius;
  border: $border-type;
}

/* Media Queries */
@mixin tallMobileScreens($mn-hgt, $mx-wdth) {
  @media only screen and (min-height: $mn-hgt) and (max-width: $mx-wdth) {
    @content;
  }
}

@mixin flippedMobileScreens($mn-wdth, $mx-hgt) {
  @media only screen and (min-width: $mn-wdth) and (max-height: $mx-hgt) {
    @content;
  }
}

@mixin padScreens($mn-hgt, $mx-hgt, $mn-wdth, $mx-wdth) {
  @media only screen and (min-height: $mn-hgt) and (max-height: $mx-hgt) and (min-width: $mn-wdth) and (max-width: $mx-wdth) {
    @content;
  }
}

@mixin flippedPadScreens($mn-wdth, $max-wdth, $mn-hgt) {
  @media only screen and (min-width: $mn-wdth) and (max-width: $max-wdth) and (min-height: $mn-hgt) {
    @content;
  }
}

@mixin laptopScreens($mn-hgt, $mn-wdth) {
  @media only screen and (min-height: $mn-hgt) and (min-width: $mn-wdth) {
    @content;
  }
}
